"""add reset_tokens table

Revision ID: 742d6cab76d4
Revises: e9d6feb065fb
Create Date: 2025-06-21 15:12:32.646316

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '742d6cab76d4'
down_revision: Union[str, None] = 'e9d6feb065fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reset_token', sa.Column('token', sa.String(), nullable=False))
    op.add_column('reset_token', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('reset_token', sa.Column('expires_at', sa.DateTime(), nullable=False))
    op.add_column('reset_token', sa.Column('used', sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, 'reset_token', ['token'])
    op.create_foreign_key(None, 'reset_token', 'users', ['user_id'], ['id'])
    op.drop_column('reset_token', 'email')
    op.drop_column('reset_token', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reset_token', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('reset_token', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'reset_token', type_='foreignkey')
    op.drop_constraint(None, 'reset_token', type_='unique')
    op.drop_column('reset_token', 'used')
    op.drop_column('reset_token', 'expires_at')
    op.drop_column('reset_token', 'user_id')
    op.drop_column('reset_token', 'token')
    # ### end Alembic commands ###
